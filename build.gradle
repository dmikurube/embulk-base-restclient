plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id "java"
    id "maven" // install jar files to the local repo: $ gradle install
    id "maven-publish"
    id "checkstyle"
    id "org.embulk.embulk-plugins" version "0.4.2" apply false
}

group = "org.embulk"
version = "0.8.0-SNAPSHOT"
description = "Base class library to access RESTful services"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/embulk-base-restclient/maven"
    }
}

dependencies {
    compileOnly "org.embulk:embulk-api:0.10.5"
    compileOnly "org.embulk:embulk-core:0.10.5"

    testCompile "junit:junit:4.13"
    testCompile "org.embulk:embulk-api:0.10.5"
    testCompile "org.embulk:embulk-core:0.10.5"
    testCompile "org.embulk:embulk-core:0.10.5:tests"
    testCompile "org.embulk:embulk-deps-buffer:0.10.5"
    testCompile "org.embulk:embulk-deps-config:0.10.5"
    testCompile "org.embulk.base.restclient:embulk-util-retryhelper-jaxrs:0.7.0"

    // RESTEasy JAX-RS implementation is required only for testing.
    testCompile "org.jboss.resteasy:resteasy-client:3.0.19.Final"
}

// TODO(dmikurube): Replace these tests with embulk-input-example.
sourceSets {
   test {
        java {
            srcDir "src/test/java"
            exclude "org/embulk/input/shopify/Test*.java"
       }
   }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    title = "${project.name} v${project.version}"

    options {
        locale = "en_US"
        encoding = "UTF-8"
        overview = "src/main/html/overview.html"
        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        // Not to skip up-to-date checkstyles.
        outputs.upToDateWhen { false }
    }
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
    ignoreFailures = true
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"

            from components.java
            // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
            // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                name = "${project.name}"
                description = "${project.description}"
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@treasure-data.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-base-restclient.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-base-restclient.git"
                    url = "https://github.com/embulk/embulk-base-restclient"
                }
            }
        }
    }
}

bintray {
    // write at your bintray user name and api key to ~/.gradle/gradle.properties file:
    user = project.hasProperty('bintray_user') ? bintray_user : ''
    key = project.hasProperty('bintray_api_key') ? bintray_api_key : ''

    publications = [ "maven" ]
    publish = true

    pkg {
        userOrg = 'embulk-base-restclient'
        repo = 'maven'
        name = project.name
        desc = "${project.description}"
        websiteUrl = 'https://github.com/embulk/embulk-base-restclient'
        issueTrackerUrl = 'https://github.com/embulk/embulk-base-restclient/issues'
        vcsUrl = 'https://github.com/embulk/embulk-base-restclient.git'
        licenses = ['Apache-2.0']
        labels = ['embulk', 'java']
        publicDownloadNumbers = true

        version {
            name = project.version
        }
    }
}
